apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      files:
        - path: /etc/containerd/certs.d/docker.io/hosts.toml
          owner: root:root
          permissions: "0644"
          content: |
            server = "https://docker.io"

            [host."${CONTAINER_REGISTRY_CACHE_DOCKERHUB}"]
              capabilities = ["pull", "resolve"]
              skip_verify = true
              override_path = true
        - path: /etc/containerd/certs.d/ghcr.io/hosts.toml
          owner: root:root
          permissions: "0644"
          content: |
            server = "https://ghcr.io"

            [host."${CONTAINER_REGISTRY_CACHE_GHCR}"]
              capabilities = ["pull", "resolve"]
              skip_verify = true
              override_path = true
        - path: /etc/containerd/certs.d/registry.k8s.io/hosts.toml
          owner: root:root
          permissions: "0644"
          content: |
            server = "https://registry.k8s.io"

            [host."${CONTAINER_REGISTRY_CACHE_K8S}"]
              capabilities = ["pull", "resolve"]
              skip_verify = true
              override_path = true
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: openstack:///'{{ instance_id }}'
          name: "{{ local_hostname }}"
          taints:
            - key: "node.cilium.io/agent-not-ready"
              value: "true"
              effect: "NoSchedule"
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - 10.0.0.0/8
    serviceDomain: cluster.local
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: OpenStackCluster
    name: ${CLUSTER_NAME}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: ${CLUSTER_NAME}-md-0
      clusterName: ${CLUSTER_NAME}
      failureDomain: ${OPENSTACK_FAILURE_DOMAIN}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: OpenStackMachineTemplate
        name: ${CLUSTER_NAME}-md-0
      version: ${KUBERNETES_VERSION}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: external
      controllerManager:
        extraArgs:
          cloud-provider: external
    files:
      - path: /etc/containerd/certs.d/docker.io/hosts.toml
        owner: root:root
        permissions: "0644"
        content: |
          server = "https://docker.io"

          [host."${CONTAINER_REGISTRY_CACHE_DOCKERHUB}"]
            capabilities = ["pull", "resolve"]
            skip_verify = true
            override_path = true
      - path: /etc/containerd/certs.d/ghcr.io/hosts.toml
        owner: root:root
        permissions: "0644"
        content: |
          server = "https://ghcr.io"

          [host."${CONTAINER_REGISTRY_CACHE_GHCR}"]
            capabilities = ["pull", "resolve"]
            skip_verify = true
            override_path = true
      - path: /etc/containerd/certs.d/registry.k8s.io/hosts.toml
        owner: root:root
        permissions: "0644"
        content: |
          server = "https://registry.k8s.io"

          [host."${CONTAINER_REGISTRY_CACHE_K8S}"]
            capabilities = ["pull", "resolve"]
            skip_verify = true
            override_path = true
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: openstack:///'{{ instance_id }}'
        name: "{{ local_hostname }}"
        taints:
          - key: "node.cilium.io/agent-not-ready"
            effect: "NoSchedule"
          - key: "node-role.kubernetes.io/control-plane"
            effect: "NoSchedule"
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: openstack:///'{{ instance_id }}'
        name: "{{ local_hostname }}"
        taints:
          - key: "node.cilium.io/agent-not-ready"
            effect: "NoSchedule"
          - key: "node-role.kubernetes.io/control-plane"
            effect: "NoSchedule"
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: OpenStackMachineTemplate
      name: ${CLUSTER_NAME}-control-plane
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OpenStackCluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  apiServerLoadBalancer:
    enabled: true
  externalNetwork:
    id: ${OPENSTACK_EXTERNAL_NETWORK_ID}
  identityRef:
    cloudName: ${OPENSTACK_CLOUD}
    name: ${CLUSTER_NAME}-cloud-config
  managedSecurityGroups:
    allowAllInClusterTraffic: True
  managedSubnets:
    - cidr: 192.168.0.23/24
      dnsNameservers:
        - ${OPENSTACK_DNS_NAMESERVERS}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OpenStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  template:
    spec:
      flavor: ${OPENSTACK_CONTROL_PLANE_MACHINE_FLAVOR}
      rootVolume:
        sizeGiB: ${OPENSTACK_CONTROL_PLANE_VOLUME_SIZE}
      image:
        filter:
          name: ${OPENSTACK_IMAGE_NAME}
      sshKeyName: ${OPENSTACK_SSH_KEY_NAME}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OpenStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      flavor: ${OPENSTACK_NODE_MACHINE_FLAVOR}
      rootVolume:
        sizeGiB: ${OPENSTACK_NODE_VOLUME_SIZE}
      image:
        filter:
          name: ${OPENSTACK_IMAGE_NAME}
      sshKeyName: ${OPENSTACK_SSH_KEY_NAME}
