---
- name: Create gardener-operator directory
  become: true
  ansible.builtin.file:
    path: /var/lib/yake/gardener-operator
    owner: "{{ gardener_operator_uid }}"
    group: "{{ gardener_operator_gid }}"
    mode: 0755
    state: directory

- name: Create garden namespace
  kubernetes.core.k8s:
    kubeconfig: "/var/lib/yake/kubeconfig.{{ gardener_operator_clusterapi_name }}"
    name: garden
    api_version: v1
    kind: Namespace
    state: present
    wait: true

- name: Install gardener operator
  kubernetes.core.helm:
    kubeconfig: "/var/lib/yake/kubeconfig.{{ gardener_operator_clusterapi_name }}"
    chart_ref: oci://europe-docker.pkg.dev/gardener-project/releases/charts/gardener/operator
    chart_version: "{{ gardener_operator_version }}"
    create_namespace: true
    release_name: gardener-operator
    release_namespace: "{{ gardener_operator_namespace }}"
    release_state: present
    update_repo_cache: true
    wait: true
    values: "{{ _gardener_operator_helm_values | combine(gardener_operator_helm_values, recursive=True) }}"

- name: Extract node CIDR from first InternalIP  #noqa risky-shell-pipe
  ansible.builtin.shell: |
    yake-kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}' \
    | awk -F. '{print $1"."$2"."$3".0/24"}'
  environment:
    KUBECONFIG: "/var/lib/yake/kubeconfig.{{ gardener_operator_clusterapi_name }}"
  register: node_cidr_output
  changed_when: false

- name: Set node_cidr fact
  ansible.builtin.set_fact:
    gardener_operator_nodes_cidr: "{{ node_cidr_output.stdout }}"

- name: Extract service CIDR from API server flags  #noqa risky-shell-pipe
  ansible.builtin.shell: |
    yake-kubectl cluster-info dump | grep -m 1 -- '--service-cluster-ip-range' \
    | sed -E 's/.*--service-cluster-ip-range=([0-9.\/]+).*/\1/'
  environment:
    KUBECONFIG: "/var/lib/yake/kubeconfig.{{ gardener_operator_clusterapi_name }}"
  register: service_cidr_output
  changed_when: false

- name: Set service_cidr fact
  ansible.builtin.set_fact:
    gardener_operator_services_cidr: "{{ service_cidr_output.stdout }}"

- name: Extract pod CIDR from API server output  #noqa risky-shell-pipe
  ansible.builtin.shell: |
    yake-kubectl cluster-info dump | grep -m 1 -- '--cluster-cidr' \
    | sed -E 's/.*--cluster-cidr=([0-9.\/]+).*/\1/'
  environment:
    KUBECONFIG: "/var/lib/yake/kubeconfig.{{ gardener_operator_clusterapi_name }}"
  register: pod_cidr_output
  changed_when: false

- name: Set pod_cidr fact
  ansible.builtin.set_fact:
    gardener_operator_pods_cidr: "{{ pod_cidr_output.stdout }}"

- name: Fail if any CIDR could not be extracted
  ansible.builtin.fail:
    msg: "One or more CIDR values could not be extracted."
  when: gardener_operator_nodes_cidr == '' or
        gardener_operator_services_cidr == '' or
        gardener_operator_pods_cidr == ''

- name: Template garden.yaml file
  ansible.builtin.template:
    src: garden.yaml.j2
    dest: /var/lib/yake/gardener-operator/garden.yaml
    owner: "{{ gardener_operator_uid }}"
    group: "{{ gardener_operator_gid }}"
    mode: 0644

- name: Create a garden object
  kubernetes.core.k8s:
    kubeconfig: "/var/lib/yake/kubeconfig.{{ gardener_operator_clusterapi_name }}"
    state: present
    wait: true
    src: /var/lib/yake/gardener-operator/garden.yaml
