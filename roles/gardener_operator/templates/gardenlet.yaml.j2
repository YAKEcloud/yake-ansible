---
apiVersion: v1
kind: Secret
metadata:
  name: openstack-cloud
  namespace: garden
  labels:
    gardener.cloud/role: internal-domain
  annotations:
    dns.gardener.cloud/provider: openstack-designate
    dns.gardener.cloud/domain: {{ gardener_operator_garden_url }}
type: Opaque
data:
  authURL: {{ gardener_operator_openstack_auth_url | b64encode }}
  tenantName: {{ gardener_operator_openstack_project_name | b64encode }}
  domainName: {{ gardener_operator_openstack_domain_name | b64encode }}
  applicationCredentialID: {{ gardener_operator_openstack_application_credential_id | b64encode }}
  applicationCredentialName: {{ gardener_operator_openstack_application_credential_name | b64encode }}
  applicationCredentialSecret: {{ gardener_operator_openstack_application_credential_secret | b64encode }}
---
apiVersion: v1
kind: Secret
metadata:
  name: default-domain
  namespace: garden
  labels:
    gardener.cloud/role: default-domain
  annotations:
    dns.gardener.cloud/provider: openstack-designate
    dns.gardener.cloud/domain: {{ gardener_operator_garden_url }}
type: Opaque
data:
  authURL: {{ gardener_operator_openstack_auth_url | b64encode }}
  tenantName: {{ gardener_operator_openstack_project_name | b64encode }}
  domainName: {{ gardener_operator_openstack_domain_name | b64encode }}
  applicationCredentialID: {{ gardener_operator_openstack_application_credential_id | b64encode }}
  applicationCredentialName: {{ gardener_operator_openstack_application_credential_name | b64encode }}
  applicationCredentialSecret: {{ gardener_operator_openstack_application_credential_secret | b64encode }}
{% if gardener_operator_backups_enable %}
---
apiVersion: v1
kind: Secret
metadata:
  name: backups-seeds
  namespace: garden
type: Opaque
stringData:
  {{ gardener_operator_backups_internal_seed_credentials }}
{% endif %}
---
apiVersion: seedmanagement.gardener.cloud/v1alpha1
kind: Gardenlet
metadata:
  name: internal-seed
  namespace: garden
spec:
  deployment:
    replicaCount: 1
    revisionHistoryLimit: 2
    helm:
      ociRepository:
        ref: europe-docker.pkg.dev/gardener-project/releases/charts/gardener/gardenlet:v{{ gardener_operator_version }}
  config:
    apiVersion: gardenlet.config.gardener.cloud/v1alpha1
    kind: GardenletConfiguration
    controllers:
      shoot:
        reconcileInMaintenanceOnly: true
        respectSyncPeriodOverwrite: true
      shootState:
        concurrentSyncs: 0
    logging:
      enabled: true
      vali:
        enabled: true
      shootNodeLogging:
        shootPurposes:
        - infrastructure
        - production
        - development
        - evaluation
    seedConfig:
      apiVersion: core.gardener.cloud/v1beta1
      kind: Seed
      spec:
{% if gardener_operator_backups_enable %}
        backup:
          provider: {{ gardener_operator_backups_provider }}
          region: {{ gardener_operator_backups_region }}
          bucketName: {{ gardener_operator_backups_internal_seed_bucket_name }}
          credentialsRef:
            apiVersion: v1
            kind: Secret
            name: backups-seeds
            namespace: garden
{% endif %}
        dns:
          provider:
            secretRef:
              name: openstack-cloud
              namespace: garden
            type: openstack-designate
          internal:
            credentialsRef:
              apiVersion: v1
              kind: Secret
              name: openstack-cloud
              namespace: garden
            type: openstack-designate
            domain: internal.{{ gardener_operator_garden_url }}
        ingress:
          controller:
            kind: nginx
          domain: ingress.seed.internal.{{ gardener_operator_garden_url }}
        networks:
          nodes: {{ gardener_operator_nodes_cidr }}
          pods: 10.0.0.0/16
          services: {{ gardener_operator_services_cidr }}
          shootDefaults:
            pods: 100.73.0.0/16
            services: 100.88.0.0/13
        provider:
          region: {{ gardener_operator_openstack_region_name }}
          type: openstack
          zones: {{ gardener_operator_openstack_zones }}
        settings:
          excessCapacityReservation:
            enabled: {{ gardener_operator_excess_capacity_reservation }}
          scheduling:
            visible: true
          verticalPodAutoscaler:
            enabled: true
